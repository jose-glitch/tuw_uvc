#! /usr/bin/env python
#Autogenerated V4L Dynamic Control

PACKAGE='tuw_uvc'
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

gen.add("show_camera_image", bool_t, 0, "Show camera image", True)
gen.add("camera_freeze", bool_t, 0, "Pulbishes the last image over and over again", True)
enum_convert_image = gen.enum([gen.const("raw_data", int_t, 0, "raw camera Data"),  gen.const("YUV422toRGB", int_t, 1, "converts image to rgb first"),  gen.const("YUV422toBRG", int_t, 2, "converts image to bgr first"),  gen.const("YUV422toGray", int_t, 3, "converts image to gray first")], "Convert image")
gen.add("convert_image_first", int_t, 3, "Convets the raw image first to an other format", 1, 0, 3, edit_method=enum_convert_image)

#Autogenerated Controls

gen.add("brightness", int_t, 0, "Brightness", 0, -64, 64)
gen.add("contrast", int_t, 0, "Contrast", 0, 0, 95)
gen.add("saturation", int_t, 0, "Saturation", 64, 0, 100)
gen.add("hue", int_t, 0, "Hue", 0, -2000, 2000)
gen.add("white_balance_temperature_auto", bool_t, 0, "White Balance Temperature, Auto", True)
gen.add("gamma", int_t, 0, "Gamma", 100, 100, 300)
enum_power_line_frequency = gen.enum([gen.const("Disabled", int_t, 0, "Disabled"), gen.const("50_Hz", int_t, 1, "50 Hz"), gen.const("60_Hz", int_t, 2, "60 Hz")], "Power Line Frequency")
gen.add("power_line_frequency", int_t, 0, "Power Line Frequency", 2, 0, 2, edit_method=enum_power_line_frequency)
gen.add("white_balance_temperature", int_t, 0, "White Balance Temperature", 4600, 2800, 6500)
gen.add("sharpness", int_t, 0, "Sharpness", 2, 1, 7)
gen.add("backlight_compensation", int_t, 0, "Backlight Compensation", 3, 0, 3)
enum_exposure_auto = gen.enum([gen.const("Unkown0", int_t, 0, "Unkown"), gen.const("Manual_Mode", int_t, 1, "Manual Mode"), gen.const("Unkown2", int_t, 2, "Unkown"), gen.const("Aperture_Priority_Mode", int_t, 3, "Aperture Priority Mode")], "Exposure, Auto")
gen.add("exposure_auto", int_t, 0, "Exposure, Auto", 3, 0, 3, edit_method=enum_exposure_auto)
gen.add("exposure_absolute", int_t, 0, "Exposure (Absolute)", 166, 12, 664)
gen.add("exposure_auto_priority", bool_t, 0, "Exposure, Auto Priority", False)

exit(gen.generate(PACKAGE, "tuw_uvc", "DellInspiron15"))
